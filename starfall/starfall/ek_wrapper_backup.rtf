{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red108\green121\blue134;\red31\green31\blue36;\red255\green255\blue255;
\red252\green95\blue163;\red93\green216\blue255;\red158\green241\blue221;\red65\green161\blue192;\red208\green168\blue255;
\red161\green103\blue230;\red103\green183\blue164;\red161\green103\blue230;\red208\green168\blue255;\red158\green241\blue221;
\red208\green191\blue105;\red103\green183\blue164;\red108\green121\blue134;}
{\*\expandedcolortbl;;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c36295\c84643\c99897;\csgenericrgb\c61961\c94510\c86667;\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;
\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c40538\c71705\c64209;\csgenericrgb\c63232\c40219\c90115;\csgenericrgb\c81569\c65882\c100000;\csgenericrgb\c62145\c94386\c86819;
\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c40392\c71765\c64314;\csgenericrgb\c42394\c47462\c52518\c45000;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\partightenfactor0

\f0\fs24 \cf2 \cb3 //\cf4 \
\cf2 //  EKWrapper.swift\cf4 \
\cf2 //  starfall\cf4 \
\cf2 //\cf4 \
\cf2 //  Created by Auburn University Student on 2/4/24.\cf4 \
\cf2 //\cf4 \
\

\f1\b \cf5 import
\f0\b0 \cf4  UIKit\

\f1\b \cf5 import
\f0\b0 \cf4  CalendarKit\

\f1\b \cf5 import
\f0\b0 \cf4  EventKit\
\

\f1\b \cf5 import
\f0\b0 \cf4  UIKit\
\

\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 final
\f0\b0 \cf4  
\f1\b \cf5 class
\f0\b0 \cf4  \cf6 EKWrapper\cf4 : \cf7 EventDescriptor\cf4  \{\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 dateInterval\cf4 : \cf9 DateInterval\cf4  \{\
        
\f1\b \cf5 get
\f0\b0 \cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  \cf9 DateInterval\cf4 (\cf10 start\cf4 : \cf11 ekEvent\cf4 .\cf12 startDate\cf4 , \cf10 end\cf4 : \cf11 ekEvent\cf4 .\cf12 endDate\cf4 )\
        \}\
        
\f1\b \cf5 set
\f0\b0 \cf4  \{\
            \cf11 ekEvent\cf4 .\cf12 startDate\cf4  = newValue.\cf12 start\cf4 \
            \cf11 ekEvent\cf4 .\cf12 endDate\cf4  = newValue.\cf12 end\cf4 \
        \}\
    \
    \}\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 isAllDay\cf4 : \cf9 Bool\cf4  \{\
        
\f1\b \cf5 get
\f0\b0 \cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  \cf11 ekEvent\cf4 .\cf12 isAllDay\cf4 \
        \}\
        
\f1\b \cf5 set
\f0\b0 \cf4  \{\
            \cf11 ekEvent\cf4 .\cf12 isAllDay\cf4  = newValue\
        \}\
    \}\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 text\cf4 : \cf9 String\cf4  \{\
        
\f1\b \cf5 get
\f0\b0 \cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  \cf11 ekEvent\cf4 .\cf12 title\cf4 \
        \}\
        
\f1\b \cf5 set
\f0\b0 \cf4  \{\
            \cf11 ekEvent\cf4 .\cf12 title\cf4  = newValue\
        \}\
    \}\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 attributedText\cf4 : \cf13 NSAttributedString\cf4 ?\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 lineBreakMode\cf4 : \cf9 NSLineBreakMode\cf4 ?\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 color\cf4 : \cf13 UIColor\cf4  \{\
        
\f1\b \cf5 get
\f0\b0 \cf4  \{\
            \cf13 UIColor\cf4 (\cf10 cgColor\cf4 : \cf11 ekEvent\cf4 .\cf12 calendar\cf4 .\cf12 cgColor\cf4 )\
        \}\
    \}\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 backgroundColor\cf4  = \cf14 SystemColors\cf4 .\cf11 systemBlue\cf4 .\cf10 withAlphaComponent\cf4 (\cf15 0.3\cf4 )\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 textColor\cf4  = \cf14 SystemColors\cf4 .\cf11 label\cf4 \
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 font\cf4  = \cf13 UIFont\cf4 .\cf10 boldSystemFont\cf4 (\cf10 ofSize\cf4 : \cf15 12\cf4 )\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 userInfo\cf4 : 
\f1\b \cf5 Any
\f0\b0 \cf4 ?\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 weak
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 editedEvent\cf4 : \cf7 EventDescriptor\cf4 ? \{\
        
\f1\b \cf5 didSet
\f0\b0 \cf4  \{\
            \cf16 updateColors\cf4 ()\
        \}\
    \}\
\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 private
\f0\b0 \cf4 (
\f1\b \cf5 set
\f0\b0 \cf4 ) 
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 ekEvent\cf4 : \cf13 EKEvent\cf4 \
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 init
\f0\b0 \cf4 (\cf8 eventKitEvent\cf4 : \cf13 EKEvent\cf4 ) \{\
        
\f1\b \cf5 self
\f0\b0 \cf4 .\cf11 ekEvent\cf4  = eventKitEvent\
        \cf16 updateColors\cf4 ()\
    \}\
\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 makeEditable\cf4 () -> \cf7 EKWrapper\cf4  \{\
        
\f1\b \cf5 let
\f0\b0 \cf4  cloned = Self(eventKitEvent: \cf11 ekEvent\cf4 )\
        cloned.\cf11 editedEvent\cf4  = 
\f1\b \cf5 self
\f0\b0 \cf4 \
        
\f1\b \cf5 return
\f0\b0 \cf4  cloned\
    \}\
\
    
\f1\b \cf5 public
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 commitEditing\cf4 () \{\
        
\f1\b \cf5 guard
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  edited = \cf11 editedEvent\cf4  
\f1\b \cf5 else
\f0\b0 \cf4  \{ 
\f1\b \cf5 return
\f0\b0 \cf4  \}\
        edited.\cf11 dateInterval\cf4  = \cf11 dateInterval\cf4 \
    \}\
\
    
\f1\b \cf5 private
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 updateColors\cf4 () \{\
        (editedEvent != 
\f1\b \cf5 nil
\f0\b0 \cf4 ) ? \cf16 applyEditingColors\cf4 () : \cf16 applyStandardColors\cf4 ()\
    \}\
\
    \cf17 ///\cf4  
\f2 \cf2 Colors used when event is not in editing mode
\f0 \cf4 \
    
\f1\b \cf5 private
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 applyStandardColors\cf4 () \{\
        \cf11 backgroundColor\cf4  = \cf16 dynamicStandardBackgroundColor\cf4 ()\
        \cf11 textColor\cf4  = \cf16 dynamicStandardTextColor\cf4 ()\
    \}\
\
    \cf17 ///\cf4  
\f2 \cf2 Colors used in editing mode
\f0 \cf4 \
    
\f1\b \cf5 private
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 applyEditingColors\cf4 () \{\
        \cf11 backgroundColor\cf4  = \cf11 color\cf4 .\cf10 withAlphaComponent\cf4 (\cf15 0.95\cf4 )\
        \cf11 textColor\cf4  = .\cf12 white\cf4 \
    \}\
\
    \cf17 ///\cf4  
\f2 \cf2 Dynamic color that changes depending on the user interface style (dark / light)
\f0 \cf4 \
    
\f1\b \cf5 private
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 dynamicStandardBackgroundColor\cf4 () -> \cf13 UIColor\cf4  \{\
        
\f1\b \cf5 let
\f0\b0 \cf4  light = \cf16 backgroundColorForLightTheme\cf4 (\cf16 baseColor\cf4 : \cf11 color\cf4 )\
        
\f1\b \cf5 let
\f0\b0 \cf4  dark = \cf16 backgroundColorForDarkTheme\cf4 (\cf16 baseColor\cf4 : \cf11 color\cf4 )\
        
\f1\b \cf5 return
\f0\b0 \cf4  \cf16 dynamicColor\cf4 (\cf16 light\cf4 : light, \cf16 dark\cf4 : dark)\
    \}\
\
    \cf17 ///\cf4  
\f2 \cf2 Dynamic color that changes depending on the user interface style (dark / light)
\f0 \cf4 \
    
\f1\b \cf5 private
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 dynamicStandardTextColor\cf4 () -> \cf13 UIColor\cf4  \{\
        
\f1\b \cf5 let
\f0\b0 \cf4  light = \cf16 textColorForLightTheme\cf4 (\cf16 baseColor\cf4 : \cf11 color\cf4 )\
        
\f1\b \cf5 return
\f0\b0 \cf4  \cf16 dynamicColor\cf4 (\cf16 light\cf4 : light, \cf16 dark\cf4 : \cf11 color\cf4 )\
    \}\
\
    
\f1\b \cf5 private
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 textColorForLightTheme\cf4 (\cf8 baseColor\cf4 : \cf13 UIColor\cf4 ) -> \cf13 UIColor\cf4  \{\
        
\f1\b \cf5 var
\f0\b0 \cf4  h: \cf9 CGFloat\cf4  = \cf15 0\cf4 , s: \cf9 CGFloat\cf4  = \cf15 0\cf4 , b: \cf9 CGFloat\cf4  = \cf15 0\cf4 , a: \cf9 CGFloat\cf4  = \cf15 0\cf4 \
        baseColor.\cf10 getHue\cf4 (&h, \cf10 saturation\cf4 : &s, \cf10 brightness\cf4 : &b, \cf10 alpha\cf4 : &a)\
        
\f1\b \cf5 return
\f0\b0 \cf4  \cf13 UIColor\cf4 (\cf10 hue\cf4 : h, \cf10 saturation\cf4 : s, \cf10 brightness\cf4 : b * \cf15 0.4\cf4 , \cf10 alpha\cf4 : a)\
    \}\
\
    
\f1\b \cf5 private
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 backgroundColorForLightTheme\cf4 (\cf8 baseColor\cf4 : \cf13 UIColor\cf4 ) -> \cf13 UIColor\cf4  \{\
        baseColor.\cf10 withAlphaComponent\cf4 (\cf15 0.3\cf4 )\
    \}\
\
    
\f1\b \cf5 private
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 backgroundColorForDarkTheme\cf4 (\cf8 baseColor\cf4 : \cf13 UIColor\cf4 ) -> \cf13 UIColor\cf4  \{\
        
\f1\b \cf5 var
\f0\b0 \cf4  h: \cf9 CGFloat\cf4  = \cf15 0\cf4 , s: \cf9 CGFloat\cf4  = \cf15 0\cf4 , b: \cf9 CGFloat\cf4  = \cf15 0\cf4 , a: \cf9 CGFloat\cf4  = \cf15 0\cf4 \
        \cf11 color\cf4 .\cf10 getHue\cf4 (&h, \cf10 saturation\cf4 : &s, \cf10 brightness\cf4 : &b, \cf10 alpha\cf4 : &a)\
        
\f1\b \cf5 return
\f0\b0 \cf4  \cf13 UIColor\cf4 (\cf10 hue\cf4 : h, \cf10 saturation\cf4 : s, \cf10 brightness\cf4 : b * \cf15 0.4\cf4 , \cf10 alpha\cf4 : a * \cf15 0.8\cf4 )\
    \}\
\
    
\f1\b \cf5 private
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 dynamicColor\cf4 (\cf8 light\cf4 : \cf13 UIColor\cf4 , \cf8 dark\cf4 : \cf13 UIColor\cf4 ) -> \cf13 UIColor\cf4  \{\
        
\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 #available
\f0\b0 \cf4 (iOS \cf15 13\cf4 , tvOS \cf15 13\cf4 , *) \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  \cf13 UIColor\cf4  \{ traitCollection 
\f1\b \cf5 in
\f0\b0 \cf4 \
                
\f1\b \cf5 let
\f0\b0 \cf4  interfaceStyle = traitCollection.\cf12 userInterfaceStyle\cf4 \
                
\f1\b \cf5 switch
\f0\b0 \cf4  interfaceStyle \{\
                
\f1\b \cf5 case
\f0\b0 \cf4  .\cf12 dark\cf4 :\
                    
\f1\b \cf5 return
\f0\b0 \cf4  dark\
                
\f1\b \cf5 default
\f0\b0 \cf4 :\
                    
\f1\b \cf5 return
\f0\b0 \cf4  light\
                \}\
            \}\
        \} 
\f1\b \cf5 else
\f0\b0 \cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  light\
        \}\
    \}\
\}\
\
}